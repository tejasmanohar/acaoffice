<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8" />

        <!-- Include Moxtra JavaScript Library -->
        <script type="text/javascript" src="https://www.moxtra.com/api/js/moxtra-latest.js" id="moxtrajs" data-client-id="ixrzAE6AUYQ"></script>

        <!-- Include External JavaScript Libraries -->
        <script src="https://code.jquery.com/jquery-1.11.0.min.js"></script>
        <script src="https://crypto-js.googlecode.com/svn/tags/3.1.2/build/rollups/hmac-sha256.js"></script>
        <script src="https://crypto-js.googlecode.com/svn/tags/3.1.2/build/components/enc-base64-min.js"></script>

        <!-- Create Signature -->
        <script type="text/javascript">// <![CDATA[
            var client_id = "ixrzAE6AUYQ";
            var client_secret = "tAEJWZD9Hio";
            var timestamp = new Date().getTime();
            var unique_id = "unique_user_id"; //Unique ID of how user is identified in your system
            
            var hash = CryptoJS.HmacSHA256(client_id + unique_id + timestamp, client_secret);
            var hashInBase64 = CryptoJS.enc.Base64.stringify(hash);
            var signature = hashInBase64.replace(/\+/g, '-').replace(/\//g, '_').replace(/\=+$/, '');
            // ]]>
        </script>
        
        <!-- Initialize user and get access token -->
        <script type="text/javascript">
            function get_token() {
                var init_options = {
                    uniqueid: unique_id,
                    timestamp: timestamp,
                    signature: signature,
                    get_accesstoken: function(result) {
                        console.log("access_token: " + result.access_token + " expires in: " + result.expires_in);
                        start_meet(result.access_token);
                    },
                    error: function(result) {
                        console.log("error code: " + result.error_code + " message: " + result.error_message);
                    }
                };
                Moxtra.setup(init_options);
            }
        </script>

        <!-- Moxtra Functions -->
        <script type="text/javascript">
        function start_meet(access_token) {
            var meet_options = {
                iframe: true, //To open the meet in the same window within an iFrame.
                // tab: true, //To open the meet in a new browser tab, N/A if iframe option is set to true.
                tagid4iframe: "meet-container",
                iframewidth: "1000px",
                iframeheight: "750px",
                extension: { 
                    "show_dialogs": { "meet_invite": true } 
                },
                access_token: access_token,
                start_meet: function(event) {
                    console.log(event);
                    console.log("Meet Started - session_id: "+event.session_id+"session_key: "+event.session_key);
                  $.post("http://acaoffice-147742.use1-2.nitrousbox.com/get-key", {
                    id: event.session_key
                  });
                    //Your application server can upload files to meet using the session_id and session_key
                },
                error: function(event) {
                    console.log("error code: " + event.error_code + " message: " + event.error_message);
                },
                end_meet: function(event) {
                    console.log("Meet Ended");
                }
            };
            Moxtra.meet(meet_options);
        }

        function start_clip(access_token) {
            var clip_options = {
                iframe: true, //To open the clip in the same window within an iFrame.
                tagid4iframe: "clip-container",
                iframewidth: "1000px",
                iframeheight: "750px",
                access_token: access_token,
                start_note: function(event) {
                    console.log("Clip Started - session_id: "+event.session_id+"session_key: "+event.session_key);
                    //Your application server can upload files to clip using the session_id and session_key
                },
                error: function(event) {
                    console.log("error code: " + event.error_code + " message: " + event.error_message);
                },
                save_note: function(event) {
                    console.log("Share URL: " + event.share_url + " Binder ID: " + event.destination_binder_id);
                }
            };
            Moxtra.note(clip_options);
        }

        function start_draw(access_token) {
            var draw_options = {
                iframe: true, //To open the draw screen in the same window within an iFrame.
                tagid4iframe: "draw-container",
                iframewidth: "1000px",
                iframeheight: "750px",
                access_token: access_token,
                start_annotate: function(event) {
                    console.log("Draw Started - session_id: "+event.session_id+"binder_id: "+event.binder_id);
                    //Your application server can upload files to draw using the binder_id and access_token
                },
                error: function(event) {
                    console.log("error code: " + event.error_code + " message: " + event.error_message);
                },
                stop_annotate: function(event) {
                    console.log("Share URL: " + event.share_url + " Binder ID: " + event.binder_id + " Download URL: " + event.download_url);
                }
            };
            Moxtra.annotate(draw_options);
        }

        function start_chat (access_token) {            
            var chat_options = {
                //unique id of the users who will be part of the chat. These users should already exist in Moxtra.
                unique_id: "unique_user_id_2,unique_user_id_3",  
                iframe: true,
                tagid4iframe: "container",
                iframewidth: "1000px",
                iframeheight: "750px",                
                access_token: access_token,
                autostart_meet: true,
                autostart_note: true,
                extension: { "show_dialogs": { "member_invite": true } },
                start_chat: function(event) {
                    console.log("Chat started binder ID: " + event.binder_id);
                    //Your application server can upload files to draw using the binder_id and access_token
                },
                start_meet: function(event) {
                    console.log("Meet started session key: " + event.session_key + " session id: " + event.session_id);
                },
                end_meet: function(event) {
                    console.log("Meet end event");
                },
                invite_member: function(event) {
                    console.log("Invite member into binder Id: " + event.binder_id);
                },
                request_note: function(event) {
                    console.log("Note start request");
                },
                error: function(event) {
                    console.log("Chat error code: " + event.error_code + " error message: " + event.error_message);
                }
            };            
            Moxtra.chat(chat_options);
        }
        </script>
            
    </head>
    <body>
        <h3><a id="getToken" href="javascript:get_token();">Moxtra Meet</a></h3>
    </body>
</html>